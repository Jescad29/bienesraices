* pug:    
    - Una dependencia que utilizaremos es pug: la cual nos simplifica el escribir html,
      poner clases o ID y aparte podemos integrar cosas como bucles(if, else etc..) tambien
      e incluir variables de manera rapida.
    - Tambien es muy limpia su sintaxis.
    - Hay que cuidar la identación.

* MVC (Model View Controller)
    Es un patron de arquitectura de software que permite la separación de obligaciones de cada pieza de tu código. 

    - Enfatiza la separación de la lógica de programación con la presentación. 

    Ventajas de MVC:
        - MVC no mejora el performance del código, tampoco da seguridad; pero tu código tendrá un mejor orden y será fácil de mantener. 
        - En un grupo de trabajo, el tener el código ordenado permite que más de una persona pueda entender que es lo que hace cada parte de él.
        - Aprender MVC, hará que otras tecnologías como Laravel, Nest, Rails, Django, Net Core, Spring Boot te sean más sencillas de aprender todos utilizan paradigmas muy similares.

        M = Model o Modelo.
        V = View o Vista.
        C = Controller o Controlador.

        Modelo en MVC: Encargado de todas la interacciones en la base de datos, obtener datos, actualizarlos y eliminar.
            - El modelo se encarga de consultar una base de datos, obtiene la información,
              pero no la muestra, eso es trabajo de la vista. 
            - El modelo tampoco se encarga de actualizar la información directamente; es el 
              Controlador quien decide cuándo llamarlo.
        Vista en MVC: Se encarga de todo lo que se ven en pantalla (HTML).
            - Node soporta múltiples Template Engine como son EJS, Pug, Handlebars.
            - Pero si utilizamos Node como API e implementamos React, Vue, Angular y Svelte, estos serían tu vista.
            - El Modelo consulta la base de datos, pero es por medio del Controlador que se decide que Vista hay que llamar y que datos presentar.
        Controlador en MVC: Es el que comunica modelo y vista; antes de que el Modelo consulte, la base de datos el Controlador es el encargado de llamar un Modelo en especifico. 
            - Una vez consultado el Modelo, el controlador recibe esa información, manda llamar a la vista y le pasa la información.
            - El controlador es el que manda a llamar la vista y modelos, que se requieren en cada parte de tu aplicación. 

        Router en MVC: Es el encargado de registrar todas las URL´s o Endpoints que va a
        soportar nuestra aplicación.

        Ejemplo: Si el Usuario accede a /clientes el router ya tiene registrada esa ruta y un controlador con una función que sabe que Modelo debe llamar y que vista mostrar cuando el usuario visita esa URL.
    